<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.test.Test">
    <select id="insertList">

select
        B.value as reserveGoodsType,
        A.goodsCode as goodsCode,
        A.goodsName as goodsName,
        A.productSpec as productSpec,
        A.orgCode as orgCode,
        A.orgName as orgName,
        A.groupOrgName as groupOrgName,
        A.provinceName as provinceName,
        A.cityName as cityName,
        A.countyName as countyName,
        A.planReserveQty as planReserveQty,
        A.reserveQty as reserveQty,
        A.workingCapital as workingCapital,
        A.reserveRate as reserveRate
        from (select reserve_goods_type as reserveGoodsType,
        goods_code as goodsCode,
        goods_name as goodsName,
        product_spec as productSpec,
        org_cd as orgCode,
        org_name as orgName,
        belong_org as groupOrgName,
        org_province_name as provinceName,
        org_city_name as cityName,
        org_county_name as countyName,
        plan_reserve_qty as planReserveQty,
        reserve_qty as reserveQty,
        working_capital as workingCapital,
        round(intDivOrZero(reserveQty, planReserveQty) * 100, 2) as reserveRate,
        org_province_code as provinceCode,
        org_city_code as cityCode,
        org_county_code as countyCode,
        from dws.dws_reserve_org_goods_type_month
        where snap_month = toString(toYYYYMM(subtractMonths(now(), 1)))
        and reserves_type = #{reservesType}
<if test="reserveGoodsType != null and reserveGoodsType != ''">
    and reserve_goods_type = #{reserveGoodsType}
</if>
<if test="goodsCode != null and goodsCode != ''">
and goods_code = #{goodsCode}
</if>
<if test="goodsName != null and goodsName != ''">
and goods_name like concat('%', #{goodsName}, '%')
</if>
<if test="provinceCode != null and provinceCode != ''">
and org_province_code = #{provinceCode}
</if>
<if test="cityCode != null and cityCode != ''">
and org_city_code = #{cityCode}
</if>
<if test="countyCode != null and countyCode != ''">
and org_county_code = #{countyCode}
</if>
<if test="orgCd != null and orgCd != ''">
and org_cd = #{orgCd}
</if>
<if test="orgName != null and orgName != ''">
and org_name like concat('%', #{orgName}, '%')
</if>
        ) A global
        left join (select key as code,
        value as value,
        order_no as order_no
        from dim.dim_data_dictionary
        where dictionary_type = 'reserve_goods_type'
        order by order_no) B on A.reserveGoodsType = B.code
        limit (#{page} - 1)*10 , #{size};
    </select>

        <select id="/data/api/aggreation/reserve/approve_number_reserve">
                select
                goods_code as goodsCode,
                any(goods_name) as goodsName,
                any(product_spec) as productSpec,
                sum(plan_reserve_qty) as planReserveQty,
                sum(reserve_qty) as reserveQty,
                sum(working_capital) as workingCapital,
                round(intDivOrZero(reserveQty, planReserveQty) * 100, 2) as reserveRate,
                any(manufacture_cd) as manufactureCd,
                any(manufacture_name) as manufactureName,
                any(approval_number) as approvalNumber,
                any(product_form) as productForm,
                any(product_spec) as productSpec
                from dws.dws_reserve_org_goods_type_month
                where snap_month = toString(toYYYYMM(subtractMonths(now(), 1)))
                and reserves_type = #{reservesType}
                <if test="goodsCode != null and goodsCode != ''">
                        and goods_code = #{goodsCode}
                </if>
                <if test="goodsName != null and goodsName != ''">
                        and goods_name like concat('%', #{goodsName}, '%')
                </if>
                <if test="provinceCode != null and provinceCode != ''">
                        and org_province_code = #{provinceCode}
                </if>
                group by goods_code
        </select>
</mapper>